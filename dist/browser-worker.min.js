!function(){var e=function(e){return e&&e.__esModule?e:{default:e}},t=function(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e},r={};Object.defineProperty(r,"__esModule",{value:!0}),r.default=void 0;r.default=class{static nameIsValid(e){return"string"==typeof e}static nameIsFilled(e){return e.trim().length>0}};var a={};Object.defineProperty(a,"__esModule",{value:!0}),a.default=void 0;var s=e(t);class i{static getSupportedStrategies(){return[i.NETWORK_FIRST,i.CACHE_FIRST]}static isValid(e){return"string"==typeof e}static isFilled(e){return e.trim().length>0}static isSupported(e){return i.getSupportedStrategies().includes(e)}}(0,s.default)(i,"NETWORK_FIRST","network-first"),(0,s.default)(i,"CACHE_FIRST","cache-first");var o=i;a.default=o;var n={};Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;class c{static _getDisplayMessage(e){const t=new Date;return`[BrowserWorker][${`${t.getHours().toString().padStart(2,"0")}:${t.getMinutes().toString().padStart(2,"0")}:${t.getSeconds().toString().padStart(2,"0")}.${t.getMilliseconds()}`}] ${e}`}static displayInfo(e){c._displayMessage(e,"info")}static displayError(e){c._displayMessage(e,"error")}static displayWarning(e){c._displayMessage(e,"warn")}static _displayMessage(e,t){c.debugEnabled()&&console[t](c._getDisplayMessage(e))}static enableDebug(){c._debug=!0}static disableDebug(){c._debug=!1}static debugEnabled(){return c._debug}}(0,e(t).default)(c,"_debug",!1);var u=c;n.default=u;var l={};Object.defineProperty(l,"__esModule",{value:!0}),l.default=void 0;var d=e(n);l.default=class{static getFromCacheFirst(e,t){e.respondWith(caches.match(e.request).then(function(r){return r?(d.default.displayInfo(`[CacheFirst] fetched ${e.request.url} from the cache`),r):fetch(e.request).then(function(r){if(!r||200!==r.status||"basic"!==r.type)return r;const a=r.clone();return caches.open(t).then(function(t){t.put(e.request,a)}),d.default.displayInfo(`[CacheFirst] No cache found for ${e.request.url}, so the resource have been fetched from the network and stored in cache`),r})}))}static getFromNetworkFirst(e,t){e.respondWith(fetch(e.request).then(r=>{if(r.ok)return caches.open(t).then(t=>t.put(e.request,r.clone())),d.default.displayInfo(`[NetworkFirst] fetched ${e.request.url} from the network (and put it in the cache)`),r.clone();throw new Error}).catch(()=>(d.default.displayInfo(`[NetworkFirst] fetched ${e.request.url} from the cache because it seems the network is down`),caches.match(e.request))))}};var f={};Object.defineProperty(f,"__esModule",{value:!0}),f.default=void 0;var h=e(t);class g{constructor(e){this.route=e}matches(e){return this.matchesByString(e)||this.matchesByRegExp(e)}matchesByString(e){return this.route.constructor===String&&e.endsWith(this.route)}matchesByRegExp(e){return this.route.constructor===RegExp&&this.route.test(e)}static isValid(e){return null!=e&&(e.constructor===String||e.constructor===RegExp)}static isFilled(e){return e.constructor===String&&e.trim().length>0||e.constructor===RegExp&&e.toString()!==(new RegExp).toString()}}(0,h.default)(g,"IMAGES",/\.(png|jpg|jpeg|gif|svg|webp)(\?.*)*$/i),(0,h.default)(g,"VIDEOS",/\.(mp4|ogv|ogg|webm|flv|3gp|mkv)(\?.*)*$/i),(0,h.default)(g,"AUDIOS",/\.(wav|mp3|ogg)(\?.*)*$/i),(0,h.default)(g,"ASSETS",/\.(js|css|html|htm)(\?.*)*$/i),(0,h.default)(g,"FONTS",/\.(woff|woff2|ttf|eot)(\?.*)*$/i);var p=g;f.default=p;var _={};Object.defineProperty(_,"__esModule",{value:!0}),_.default=void 0;var y=e(t),v=e(r),w=e(a),b=e(n),m=e(l),S=e(f);class R{static enableControlOverAllTabs(){return this._controlOverAllTabs=!0,this}static disableWaitingOtherInstances(){return this._waitOtherInstances=!1,this}static enableWaitingOtherInstances(){return this._waitOtherInstances=!0,this}static setCacheStrategy(e){const t=w.default.getSupportedStrategies();if(!w.default.isValid(e))throw new TypeError(`expected strategy to be a string (${typeof e} given)`);if(!w.default.isFilled(e))throw new Error("expected strategy not to be empty");if(!w.default.isSupported(e)){const r=t.join(", ");throw new Error(`unsupported strategy ${e} (use one of the following: ${r})`)}return R._cacheStrategy=e,this}static getCacheStrategy(){return R._cacheStrategy}static addRoute(e){if(!S.default.isValid(e))throw new TypeError(`expected route to be either string or regexp (${typeof e} given)`);if(!S.default.isFilled(e))throw new Error("expected route string not to be empty");return R._routes.push({strategy:R._cacheStrategy,route:e,cacheName:R._currentCacheName}),this}static addRoutes(e){for(const t of e)R.addRoute(t);return this}static getRoutes(){return R._routes}static deleteRoute(e){if(!S.default.isValid(e))throw new TypeError(`expected route to be either string or regexp (got: ${typeof e})`);if(!S.default.isFilled(e))throw new Error("expected route not to be empty");return R._routes=R._routes.filter(t=>t.route!==e),this}static deleteRoutes(e){for(const t of e)R.deleteRoute(t);return this}static hasRoute(e){for(const t of R._routes)if(t.route===e)return!0;return!1}static setCacheName(e){if(!v.default.nameIsValid(e))throw new TypeError(`expected cache name to be a string (got: ${typeof e})`);if(!v.default.nameIsFilled(e))throw new Error("expected cache name not to be empty");const t=e+R._cacheSuffix;return R._currentCacheName=t,R._activeCachesName.push(t),this}static setServiceWorkerPath(e){return R._serviceWorkerPath=e,this}static registerServiceWorker(){"serviceWorker"in navigator&&navigator.serviceWorker.register(R._serviceWorkerPath).then(e=>{b.default.displayInfo(`service worker registered (scope: ${e.scope}).`)}).catch(function(e){b.default.displayError("an error occured while registering your service worker."),b.default.displayError(e)})}static async removeServiceWorker(){if("serviceWorker"in navigator){const e=(await navigator.serviceWorker.getRegistrations()).map(e=>e.unregister()),t=await Promise.all(e),r=t.filter(e=>!0===e).length,a=t.filter(e=>!1===e).length;b.default.displayInfo(`${r} service workers removed, ${a} service worker removals failed`)}else b.default.displayWarning("service workers are not supported in your browser");return this}static async removeCaches(){if("caches"in window){const e=(await caches.keys()).filter(e=>e.endsWith(R._cacheSuffix)).map(e=>caches.delete(e)),t=await Promise.all(e),r=t.filter(e=>!0===e).length,a=t.filter(e=>!1===e).length;b.default.displayInfo(`${r} caches removed, ${a} cache removals failed`)}else b.default.displayWarning("the caches API is not supported in your browser");return this}static async addResourceToCache(e){"caches"in window&&(await caches.open(R._currentCacheName)).add(e)}static listenRequests(){R._activateServiceWorker(),R._installServiceWorker(),R._listenRequests()}static enableDebug(){return b.default.enableDebug(),this}static disableDebug(){return b.default.disableDebug(),this}static debugEnabled(){return b.default.debugEnabled()}static reset(){return R._cacheStrategy="",R._cacheSuffix="-browser-worker",R._currentCacheName="",R._activeCachesName=[],R._routes=[],R._currentRoute="",R._waitOtherInstances=!0,R._controlOverAllTabs=!1,R._serviceWorkerPath="/service-worker.js",this}static resetCacheStrategy(){return R._cacheStrategy="",this}static resetRoutes(){return R._routes=[],this}static _setCurrentRoute(e){for(const t of R._routes)if(new S.default(t.route).matches(e)){R._currentRoute=t;break}}static _currentRouteStrategyIs(e){return R._currentRoute&&R._currentRoute.strategy===e}static _currentRouteValid(){return null!==R._currentRoute&&void 0!==R._currentRoute&&R._currentRoute.constructor===Object}static _currentRouteMatches(e){const t=new S.default(R._currentRoute.route);return R._currentRouteValid()&&(t.matchesByString(e)||t.matchesByRegExp(e))}static _getCurrentRouteCacheName(){return R._currentRoute.cacheName}static _activateServiceWorker(){self.addEventListener("activate",e=>{this._controlOverAllTabs?(clients.claim(),b.default.displayInfo("controlling all tabs.")):b.default.displayError("controlling only this tab (if you want to controll all tabs, use BrowserWorker.enableControlOverAllTabs())"),e.waitUntil(caches.keys().then(function(e){return Promise.all(e.filter(e=>!R._activeCachesName.includes(e)).map(e=>caches.delete(e)),b.default.displayInfo("cleaned old caches."))}))})}static _installServiceWorker(){self.addEventListener("install",()=>{this._waitOtherInstances?b.default.displayInfo("waiting for others instances before installing (if you want to skip waiting, use BrowserWorker.disableWaitingOtherInstances())"):(self.skipWaiting(),b.default.displayInfo("skipped waiting for other instances to finish."))})}static _listenRequests(){self.addEventListener("fetch",async e=>{R._setCurrentRoute(e.request.url),R._currentRouteMatches(e.request.url)?R._currentRouteStrategyIs(w.default.NETWORK_FIRST)?m.default.getFromNetworkFirst(e,R._getCurrentRouteCacheName()):R._currentRouteStrategyIs(w.default.CACHE_FIRST)?m.default.getFromCacheFirst(e,R._getCurrentRouteCacheName()):b.default.displayWarning(`unsupported strategy ${R._currentRoute.strategy}`):b.default.displayInfo(`resource ${e.request.url} do not match any strategy, leaving the browser to handle it`)})}}(0,y.default)(R,"_cacheStrategy",""),(0,y.default)(R,"_cacheSuffix","-browser-worker"),(0,y.default)(R,"_currentCacheName",""),(0,y.default)(R,"_activeCachesName",[]),(0,y.default)(R,"_routes",[]),(0,y.default)(R,"_currentRoute",{}),(0,y.default)(R,"_waitOtherInstances",!0),(0,y.default)(R,"_controlOverAllTabs",!1),(0,y.default)(R,"_serviceWorkerPath","/service-worker.js");var k=R;_.default=k;var I={};Object.defineProperty(I,"__esModule",{value:!0}),Object.defineProperty(I,"BrowserWorker",{enumerable:!0,get:function(){return E.default}}),Object.defineProperty(I,"CacheStrategy",{enumerable:!0,get:function(){return C.default}}),Object.defineProperty(I,"Route",{enumerable:!0,get:function(){return W.default}});var E=e(_),C=e(a),W=e(f);window.BrowserWorker=I.BrowserWorker}();